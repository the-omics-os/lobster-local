[build-system]
requires = ["setuptools>=65.0", "wheel", "setuptools-scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "lobster"
dynamic = ["version"]
authors = [
    {name = "Omics-OS", email = "info@omics-os.com"}
]
description = "Multi-Agent Bioinformatics Analysis System powered by LangGraph"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Healthcare Industry", 
    "License :: OSI Approved :: Apache 2.0 License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Environment :: Console",
    "Framework :: FastAPI",
]
keywords = ["bioinformatics", "RNA-seq", "single-cell", "AI", "machine-learning", "data-analysis", "genomics"]
dependencies = [
    # Core
    "pandas>=1.5.0",
    "numpy>=1.23.0",
    "plotly>=5.0.0",
    "rich>=12.0.0",
    "typer>=0.7.0",
    "python-dotenv>=1.0.0",
    # LangChain and AI
    "langchain>=0.1.0",
    "langchain-community>=0.0.10",
    "langchain-openai>=0.0.5",
    "langchain-aws>=0.1.0",
    "langgraph==0.6.7",
    "openai>=1.0.0",
    # Bioinformatics (bumped versions for Python 3.12 support)
    "llvmlite>=0.39.0", # explicit to avoid old version being pulled
    "scipy>=1.10.0",
    "scikit-learn>=1.3.0",
    "anndata>=0.9.0",
    "mudata>=0.2.0",
    "biopython>=1.81",
    "leidenalg>=0.9.0",
    "igraph>=0.10.4",
    "scrublet>=0.2.3",
    "h5py>=3.9.0",
    "tables>=3.8.0",
    # Differential expression analysis",
    "statsmodels>=0.14.0", # Statistical modeling for formula parsing and DE analysis
    # Visualization
    "seaborn>=0.12.0",
    "matplotlib>=3.7.0",
    "kaleido>=0.2.0",
    # Data I/O
    "openpyxl>=3.1.0",
    "pyarrow>=12.0.0",
    "pyreadr>=0.4.0",
    # HTTP and utilities
    "requests>=2.31.0",
    "aiofiles>=23.0.0",
    "xmltodict>=0.13.0",
    "boto3>=1.26.0",
    # API support
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "scikit-misc>=0.5.1",
    "python-multipart>=0.0.20",
    "streamlit>=1.48.1",
    "GEOparse",
    "packaging>=25.0",
    "tabulate>=0.9.0",
    "langfuse>=3.2.6",
    "polars>=1.32.3",
    "psutil>=7.0.0",
    "scanpy>=1.11.4",
    "pydeseq2>=0.5.2",
    "prompt-toolkit>=3.0.52",
    "scvi-tools>=1.4.0",
    # PyTorch support (required by scvi-tools)
    "torch>=2.0.0",
    "langchain-anthropic>=0.3.20",
]

[project.optional-dependencies]
dev = [
    # Core testing framework
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "pytest-benchmark>=4.0.0",
    "pytest-timeout>=2.1.0",
    "pytest-html>=3.2.0",
    "pytest-json-report>=1.5.0",
    
    # Mock and test data generation
    "factory-boy>=3.2.0",
    "responses>=0.23.0",
    "httpretty>=1.1.4",
    "freezegun>=1.2.0",
    "faker>=19.0.0",
    
    # Mock services for testing
    "moto>=4.1.0",
    "fakeredis>=2.10.0",
    "ftputil>=5.0.4",
    
    # Performance and memory profiling
    "memory-profiler>=0.60.0",
    "psutil>=5.9.0",
    
    # Code quality and formatting
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "pylint>=2.17.0",
    "mypy>=1.0.0",
    "bandit>=1.7.0",
    "ruff>=0.0.300",
    
    # Development tools
    "pre-commit>=3.0.0",
    "bumpversion>=0.6.0",
    "twine>=4.0.0",
    "build>=0.10.0",
    
    # Documentation
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    
    # Additional utilities
    "langfuse>=2.0.0",
    "tabulate>=0.9.0",
]
all = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "pytest-asyncio>=0.20.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "pylint>=2.17.0",
    "mypy>=1.0.0",
    "bandit>=1.7.0",
    "pre-commit>=3.0.0",
    "bumpversion>=0.6.0",
    "twine>=4.0.0",
    "build>=0.10.0",
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "langfuse>=2.0.0",
    "tabulate>=0.9.0",
]

[project.urls]
"Homepage" = "https://www.omics-os.com"
"Bug Tracker" = "https://github.com/the-omics-os/lobster/issues"
"Documentation" = "https://github.com/the-omics-os/lobster.wiki"
"Source Code" = "https://github.com/the-omics-os/lobster"

[project.scripts]
lobster = "lobster.cli:app"

[tool.setuptools]
packages = ["lobster"]

[tool.setuptools.dynamic]
version = {attr = "lobster.version.__version__"}

[tool.setuptools.package-data]
lobster = ["**/*.json", "**/*.yaml", "**/*.yml"]

[tool.setuptools-scm]
write_to = "lobster/_version.py"
version_scheme = "release-branch-semver"
local_scheme = "node-and-date"

# Development tools configurations
[tool.black]
line-length = 88
target-version = ["py312"]

[tool.isort]
profile = "black"
line_length = 88

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--cov=lobster",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml:coverage.xml",
    "--cov-fail-under=85",
    "--durations=10",
    "--tb=short",
]
markers = [
    "unit: Unit tests for individual components",
    "integration: Integration tests for multi-component workflows", 
    "system: System tests for complete workflows",
    "performance: Performance and benchmarking tests",
    "slow: Tests that take more than 30 seconds",
    "requires_api: Tests that require external API access",
    "requires_gpu: Tests that require GPU resources",
]
filterwarnings = [
    "ignore::DeprecationWarning:pkg_resources.*",
    "ignore::PendingDeprecationWarning",
    "ignore::UserWarning:anndata.*",
]
minversion = "7.0"
timeout = 300

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.bumpversion]
current_version = "0.1.0"
commit = true
tag = true

[dependency-groups]
dev = [
    "psutil>=7.0.0",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
]
